//Singly List 

#include<stdio.h>
#include<stdlib.h>
typedef struct Node{
    int data;
    struct Node *next;
}Node;
Node* head=NULL;        //jab bi kisi pointer variable ko null dete hain matlab ye kisi ko point nahin kar rha hai

Node* createNode(int ele){
    Node* newNode= (Node*)malloc(sizeof(Node));         
    newNode -> data= ele;
    newNode -> next = NULL;
    return newNode;
}


void insertNodeInBeg(int ele){
     Node* newNode=createNode(ele);                //sizeofnode btayega ki memory mein kitni space li  //jis data type me convert karna chhte hai use () me likhenge            
newNode -> next = head;             
        head=newNode;
    printf("Node Inserted!!!\n");
}



void insertNodeAtEnd(int ele){
    Node* newNode=createNode(ele); 
if(head==NULL)
head=newNode;
else{
Node* temp=head;
while(temp -> next !=NULL){
    temp=temp ->next;
}
temp ->next=newNode;
printf("Node Inserted!!!\n");
}}



void insertAtAnyPos(int ele, int pos){
    if(head==NULL)
 printf("List is empty!!!\n");
 else if(pos==1)
 insertNodeInBeg(ele);
 else{
    Node* temp=head;
    int i=1;
    while(i<pos-1 && temp ->next !=NULL){
        temp =temp ->next;
        i++;
    }
    if(temp ->next !=NULL&&i>1){
    Node* newNode= createNode(ele);
    newNode ->next = temp ->next;
    temp ->next = newNode;
    printf("Node Inserted!!!\n");
    }
    else
    printf("Invalid Position!!!\n");
 }
}

void display(){
    if(head==NULL)
    printf("List is empty!!!\n");
    else{               //display deletion seaerching ke liye traversing karni padegi
        Node* temp =head;
        while(temp != NULL){
            printf("  %d", temp -> data);
            temp= temp ->next;
    }}}

    int main(){
        while(1){
        printf("\n-----Singly List-----");
        printf("\n1.Insert Node in the beginning\n");
        printf("2.Insert Node At End\n");
        printf("3.Insert Node At Any Position\n"); 
        printf("4.Delete Node From Beginning\n");
        printf("5.Delete Node From End\n");
        printf("6.Delete Node From Any Position\n");
        printf("7.Search Eleemnt In Linked List\n");
        printf("8.Sort Elements\n");
        printf("9.Display List\n");
        printf("10.Exit\n");
        int choice,value,pos;
        printf("Enter Choice: ");
        scanf("%d",&choice);
        switch(choice){
            case 1:             //
            printf("Enter Value: ");
            scanf("%d",&value);
            insertNodeInBeg(value);
            break;

            case 2:
            printf("Enter Value: ");
            scanf("%d",&value);
            insertNodeAtEnd(value);
            break;

            case 3: 
            printf("Ente Value: ");
            scanf("%d",&value);
            printf("Enter Position: ");
            scanf("%d",&pos);
            insertAtAnyPos(value,pos);
            break;

            case 4:
            break;

            case 5:
            break;

            case 6:
            break;

            case 7:
            break;

            case 8:
            break;

            case 9:
            display();
            break;

            case 10:
            exit(0);
            
            default:
            printf("Invalid Choice!!!\n");
        }
    }
    return 0;
}
