#include <stdio.h>
#include <stdlib.h>
#include <limits.h>
#define MAX 100
int stack[MAX], top = -1;
int isEmpty()
{
    return (top == -1) ? 1 : 0;
}
int isFull()
{
    return (top == MAX - 1) ? 1 : 0;             //MAX is stack ka fixed size which is given
}
void push()
{
    if (isFull())
    {                                           //jab stack me data push karte hain to stack full wali condition check karte hain
        printf("Stack Overflow!!!!");
    }
    else
    {
        int data;
        printf("Enter element=");              //increment top by one
        scanf("%d", &data);                   //assign new value at the top of the stack
        top++;
        stack[top]=data;
        printf("Element added!!!\n");
    }
}
int pop()
{
    if (isEmpty())
    {
        printf("Stack Underflow!!");                    //pehle access the top element of the stack
        return INT_MIN;                                 //top--  (phir decrement karo)
    }
    else
    {
        int val = stack[top];
        top--;
        return val;
    }
}
void show(){
    if (isEmpty()){
        printf("Stack is Empty!!");
    }
   else{
    printf("Stack elements are: ");
    int i;
    for(i=top;i>=0;i--){
        printf("%d\n",stack[i]);
    }
   }
    }

int peek(){
    if (isEmpty()){
        printf("Stack is empty!!\n");
        return INT_MIN;
    }
    else{
    int val = stack[top];
    return stack[top];
}}
int main(){
    while (1){
        printf("1. Push\n");
        printf("2. Pop\n");
        printf("3. Peek\n");
        printf("4. Show\n");
        printf("5. Exit\n");
        int choice, val;
        printf("Enter Choice=");
        scanf("%d", &choice);
        switch (choice)
        {
        case 1:
            push();
            break;
        case 2:
            val = pop();
            if (val != INT_MIN)
                printf("%d pop from the stack!!!\n", val);
            break;
        case 3:
            val=peek();
            if (val != INT_MIN)
                printf("%d is the top element of stack!!!\n",val);
            break;
        case 4:
            show();
            break;
        case 5:
            exit(0);
            break;
        default:
            printf("Invalid choice!!\n");
        }
        printf("\n");
        system("pause");
    }
    return 0;
}
